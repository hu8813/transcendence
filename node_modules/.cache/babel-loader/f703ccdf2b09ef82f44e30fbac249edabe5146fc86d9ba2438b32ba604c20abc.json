{"ast":null,"code":"var _jsxFileName = \"/home/hu8813/transcendence/src/components/Auth/Register.js\",\n  _s = $RefreshSig$();\n// Register.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport './Register.css'; // Create a Register.css file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n\n  // Implement registration logic here\n  const handleRegister = () => {\n    // Add your registration logic\n    if (password === confirmPassword) {\n      // Passwords match, proceed with registration\n      // Implement your registration logic here\n      console.log('Registration successful!');\n    } else {\n      // Passwords do not match, set passwordMismatch state to true\n      setPasswordMismatch(true);\n    }\n  };\n\n  // Function to handle password change\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    // Reset passwordMismatch state when the user changes the password\n    setPasswordMismatch(false);\n  };\n\n  // Function to handle confirmPassword change\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    // Reset passwordMismatch state when the user changes the confirmPassword\n    setPasswordMismatch(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: t('auth.register')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: t('auth.email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: t('auth.enterEmail')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: t('auth.password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: t('auth.enterPassword'),\n            onChange: handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: t('auth.confirmPassword')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: t('auth.confirmPassword'),\n            onChange: handleConfirmPasswordChange,\n            isInvalid: passwordMismatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: t('auth.passwordMismatch')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [t('auth.acceptTerms'), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/terms-and-conditions\",\n                target: \"_blank\",\n                children: t('auth.termsAndConditions')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleRegister,\n          children: t('auth.register')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"/vuiLfZi7zp0YlNlsZF7J0PPX+I=\", false, function () {\n  return [useTranslation];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useTranslation","Form","Button","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","t","password","setPassword","confirmPassword","setConfirmPassword","passwordMismatch","setPasswordMismatch","handleRegister","console","log","handlePasswordChange","e","target","value","handleConfirmPasswordChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Feedback","Check","label","href","variant","onClick","_c","$RefreshReg$"],"sources":["/home/hu8813/transcendence/src/components/Auth/Register.js"],"sourcesContent":["// Register.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport './Register.css'; // Create a Register.css file for styling\n\nconst Register = () => {\n  const { t } = useTranslation();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\n\n  // Implement registration logic here\n  const handleRegister = () => {\n    // Add your registration logic\n    if (password === confirmPassword) {\n      // Passwords match, proceed with registration\n      // Implement your registration logic here\n      console.log('Registration successful!');\n    } else {\n      // Passwords do not match, set passwordMismatch state to true\n      setPasswordMismatch(true);\n    }\n  };\n\n  // Function to handle password change\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    // Reset passwordMismatch state when the user changes the password\n    setPasswordMismatch(false);\n  };\n\n  // Function to handle confirmPassword change\n  const handleConfirmPasswordChange = (e) => {\n    setConfirmPassword(e.target.value);\n    // Reset passwordMismatch state when the user changes the confirmPassword\n    setPasswordMismatch(false);\n  };\n\n  return (\n    <Container>\n     \n      <div className=\"register-container text-center\">\n      <h2>{t('auth.register')}</h2>\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>{t('auth.email')}</Form.Label>\n            <Form.Control type=\"email\" placeholder={t('auth.enterEmail')} />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>{t('auth.password')}</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder={t('auth.enterPassword')}\n              onChange={handlePasswordChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicConfirmPassword\">\n            <Form.Label>{t('auth.confirmPassword')}</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder={t('auth.confirmPassword')}\n              onChange={handleConfirmPasswordChange}\n              isInvalid={passwordMismatch}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {t('auth.passwordMismatch')}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check\n              type=\"checkbox\"\n              label={\n                <>\n                  {t('auth.acceptTerms')}{' '}\n                  <a href=\"/terms-and-conditions\" target=\"_blank\">\n                    {t('auth.termsAndConditions')}\n                  </a>\n                </>\n              }\n            />\n          </Form.Group>\n         \n          <Button variant=\"primary\" type=\"submit\" onClick={handleRegister}>\n            {t('auth.register')}\n          </Button>\n        </Form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}