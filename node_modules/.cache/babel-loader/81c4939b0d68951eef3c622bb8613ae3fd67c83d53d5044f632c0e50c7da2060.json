{"ast":null,"code":"var _jsxFileName = \"/home/hu8813/transcendence/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { FiUser } from 'react-icons/fi';\nimport './Login.css'; // Create a Login.css file for styling\n// Import necessary libraries and components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation(); // Get the current location to parse the callback URL\n\n  const handleSignIn = provider => {\n    if (provider === '42') {\n      // Redirect the user to the 42 API authorization URL\n      // Use your actual client ID and redirect URI\n      let clientId = process.env.REACT_APP_CLIENT_ID || \"3744599425fa99708b404da0be2ed6f6d5d7f268d3288021eead9df2c5675536\";\n      let redirectUri = process.env.REACT_APP_REDIRECT_URI || \"https://42dashboard.vercel.app/login/42/return\";\n      const authUrl = `https://api.intra.42.fr/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`;\n      window.location.href = authUrl;\n    } else {\n      // Implement your logic for regular sign-in\n    }\n  };\n  useEffect(() => {\n    const storedLanguage = localStorage.getItem('language');\n    if (storedLanguage) {\n      i18n.changeLanguage(storedLanguage);\n    }\n\n    // Check if the callback URL contains an authorization code\n    const urlParams = new URLSearchParams(location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      // If an authorization code is present, exchange it for an access token\n      exchangeCodeForAccessToken(code);\n    }\n  }, [location.search]);\n  const exchangeCodeForAccessToken = code => {\n    // Make a POST request to exchange the code for an access token\n    let clientId = process.env.REACT_APP_CLIENT_ID || \"3744599425fa99708b404da0be2ed6f6d5d7f268d3288021eead9df2c5675536\";\n    let clientSecret = process.env.REACT_APP_CLIENT_SECRET || \"your-client-secret\";\n    let redirectUri = process.env.REACT_APP_REDIRECT_URI || \"https://42dashboard.vercel.app/login/42/return\";\n    const requestBody = new URLSearchParams();\n    requestBody.append('client_id', clientId);\n    requestBody.append('client_secret', clientSecret);\n    requestBody.append('code', code);\n    requestBody.append('redirect_uri', redirectUri);\n    requestBody.append('grant_type', 'authorization_code');\n    fetch('https://api.intra.42.fr/oauth/token', {\n      method: 'POST',\n      body: requestBody\n    }).then(response => response.json()).then(data => {\n      // Handle the API response, which will include an access token\n      const accessToken = data.access_token;\n      // Store the access token in a secure way, e.g., in local storage or state\n      localStorage.setItem('access_token', accessToken);\n\n      // Now you can use the access token to make authenticated requests to the 42 API on behalf of the user\n      // You may want to redirect the user to a different page or display a success message here\n    }).catch(error => {\n      // Handle any errors that occur during the token exchange\n      console.error('Error exchanging authorization code for access token:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"bKCvMKVdRRGLi8ctdidDVb91M6Q=\", false, function () {\n  return [useTranslation, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","Link","useLocation","useTranslation","i18n","Form","Button","Container","FiUser","jsxDEV","_jsxDEV","Login","_s","t","location","handleSignIn","provider","clientId","process","env","REACT_APP_CLIENT_ID","redirectUri","REACT_APP_REDIRECT_URI","authUrl","window","href","storedLanguage","localStorage","getItem","changeLanguage","urlParams","URLSearchParams","search","code","get","exchangeCodeForAccessToken","clientSecret","REACT_APP_CLIENT_SECRET","requestBody","append","fetch","method","body","then","response","json","data","accessToken","access_token","setItem","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hu8813/transcendence/src/components/Auth/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { FiUser } from 'react-icons/fi';\n\nimport './Login.css'; // Create a Login.css file for styling\n// Import necessary libraries and components\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const location = useLocation(); // Get the current location to parse the callback URL\n\n  const handleSignIn = (provider) => {\n    if (provider === '42') {\n      // Redirect the user to the 42 API authorization URL\n      // Use your actual client ID and redirect URI\n      let clientId = process.env.REACT_APP_CLIENT_ID || \"3744599425fa99708b404da0be2ed6f6d5d7f268d3288021eead9df2c5675536\";\n      let redirectUri = process.env.REACT_APP_REDIRECT_URI || \"https://42dashboard.vercel.app/login/42/return\";\n      \n      const authUrl = `https://api.intra.42.fr/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`;\n\n      window.location.href = authUrl;\n    } else {\n      // Implement your logic for regular sign-in\n    }\n  };\n\n  useEffect(() => {\n    const storedLanguage = localStorage.getItem('language');\n    if (storedLanguage) {\n      i18n.changeLanguage(storedLanguage);\n    }\n\n    // Check if the callback URL contains an authorization code\n    const urlParams = new URLSearchParams(location.search);\n    const code = urlParams.get('code');\n\n    if (code) {\n      // If an authorization code is present, exchange it for an access token\n      exchangeCodeForAccessToken(code);\n    }\n  }, [location.search]);\n\n  const exchangeCodeForAccessToken = (code) => {\n    // Make a POST request to exchange the code for an access token\n    let clientId = process.env.REACT_APP_CLIENT_ID || \"3744599425fa99708b404da0be2ed6f6d5d7f268d3288021eead9df2c5675536\";\n    let clientSecret = process.env.REACT_APP_CLIENT_SECRET || \"your-client-secret\";\n    let redirectUri = process.env.REACT_APP_REDIRECT_URI || \"https://42dashboard.vercel.app/login/42/return\";\n\n    const requestBody = new URLSearchParams();\n    requestBody.append('client_id', clientId);\n    requestBody.append('client_secret', clientSecret);\n    requestBody.append('code', code);\n    requestBody.append('redirect_uri', redirectUri);\n    requestBody.append('grant_type', 'authorization_code');\n\n    fetch('https://api.intra.42.fr/oauth/token', {\n      method: 'POST',\n      body: requestBody,\n    })\n      .then(response => response.json())\n      .then(data => {\n        // Handle the API response, which will include an access token\n        const accessToken = data.access_token;\n        // Store the access token in a secure way, e.g., in local storage or state\n        localStorage.setItem('access_token', accessToken);\n\n        // Now you can use the access token to make authenticated requests to the 42 API on behalf of the user\n        // You may want to redirect the user to a different page or display a success message here\n      })\n      .catch(error => {\n        // Handle any errors that occur during the token exchange\n        console.error('Error exchanging authorization code for access token:', error);\n      });\n  };\n\n  return (\n    <Container>\n      <div className=\"wrapper\">\n        {/* ... (your existing code for rendering the sign-in button and form) ... */}\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}